// This is Prisma schema file that defines data model for the application. It is used to generate Prisma Client JS library that is used to interact with the database.
// The schema file is written in Prisma Schema Language. It is a declarative language that allows you to define your data model, relations, and constraints.
// Prisma supports various types of databases like PostgreSQL, MySQL, SQLite, and SQL Server and can be used with various programming languages like JavaScript, TypeScript, Go, and Rust.
// Prisma can be used with mongodb as well but it is in beta stage as of now so not good for production use.
// Best suited for relational databases like PostgreSQL (industry standared), MySQL, SQLite, and SQL Server.


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model definitions

model Novel {
  id        String   @id @default(uuid())
  title     String
  image     String?
  createdAt  DateTime @default(now())
  updatedAT  DateTime @updatedAt
  authors    Author[] // this is a one-to-many relation with the Author model (one Novel to many Authors)
}

model Author {
  id      String   @id @default(uuid())
  name    String
  Novel   Novel? @relation(fields: [novelId], references: [id]) // this is a one-to-many relation with the Novel model (one Author to many Novels)
  novelId String? // this is the foreign key to the Novel model (the field name is the same as the field name in the Novel model)
}
